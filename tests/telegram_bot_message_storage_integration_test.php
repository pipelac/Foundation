<?php

declare(strict_types=1);

/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è MessageStorage —Å —Ä–µ–∞–ª—å–Ω—ã–º Telegram API
 * 
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –±–µ–∑ –ë–î (MessageStorage –æ—Ç–∫–ª—é—á–µ–Ω),
 * –Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å TelegramAPI
 */

require_once __DIR__ . '/../autoload.php';

use App\Component\Http;
use App\Component\Logger;
use App\Component\TelegramBot\Core\MessageStorage;
use App\Component\TelegramBot\Core\TelegramAPI;

// –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
const COLOR_GREEN = "\033[32m";
const COLOR_RED = "\033[31m";
const COLOR_YELLOW = "\033[33m";
const COLOR_BLUE = "\033[34m";
const COLOR_RESET = "\033[0m";

function printHeader(string $text): void
{
    echo "\n" . COLOR_BLUE . str_repeat('=', 80) . COLOR_RESET . "\n";
    echo COLOR_BLUE . $text . COLOR_RESET . "\n";
    echo COLOR_BLUE . str_repeat('=', 80) . COLOR_RESET . "\n\n";
}

function printSuccess(string $text): void
{
    echo COLOR_GREEN . "‚úì " . $text . COLOR_RESET . "\n";
}

function printError(string $text): void
{
    echo COLOR_RED . "‚úó " . $text . COLOR_RESET . "\n";
}

function printWarning(string $text): void
{
    echo COLOR_YELLOW . "‚ö† " . $text . COLOR_RESET . "\n";
}

function printInfo(string $text): void
{
    echo "  " . $text . "\n";
}

printHeader("–ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–´–ô –¢–ï–°–¢ MessageStorage + TelegramAPI");

printWarning("–í–ù–ò–ú–ê–ù–ò–ï: MySQL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥–µ");
printInfo("–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é TelegramAPI —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º MessageStorage");
printInfo("–∏ —Ä–∞–±–æ—Ç—É —Å —Ä–µ–∞–ª—å–Ω—ã–º Telegram Bot API");

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
$testToken = '8327641497:AAFTHb3xSTpP3Q6Peg8-OK4nTWTfF7iMWfI';
$testChatId = 366442475;

printInfo("–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Ç–æ–∫–µ–Ω: " . substr($testToken, 0, 20) . "...");
printInfo("–¢–µ—Å—Ç–æ–≤—ã–π chat_id: $testChatId");

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
printInfo("\n–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...");
$logger = new Logger([
    'directory' => __DIR__ . '/../logs',
    'fileName' => 'telegram_bot_storage_integration_test.log',
]);

$http = new Http([
    'timeout' => 30,
    'connect_timeout' => 10,
], $logger);

printSuccess("–õ–æ–≥–≥–µ—Ä –∏ HTTP –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã");

// ===========================
// –¢–ï–°–¢ 1: TelegramAPI –±–µ–∑ MessageStorage
// ===========================
printHeader("–¢–ï–°–¢ 1: TelegramAPI –±–µ–∑ MessageStorage");

printInfo("–°–æ–∑–¥–∞–Ω–∏–µ TelegramAPI –±–µ–∑ MessageStorage...");
$api1 = new TelegramAPI($testToken, $http, $logger);
printSuccess("TelegramAPI —Å–æ–∑–¥–∞–Ω");

printInfo("–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...");
try {
    $botInfo = $api1->getMe();
    printSuccess("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞:");
    printInfo("  ID: {$botInfo->id}");
    printInfo("  Username: @{$botInfo->username}");
    printInfo("  –ò–º—è: {$botInfo->firstName}");
} catch (\Exception $e) {
    printError("–û—à–∏–±–∫–∞: " . $e->getMessage());
}

printInfo("\n–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...");
try {
    $message = $api1->sendMessage(
        $testChatId,
        "üß™ –¢–ï–°–¢ #1: –û—Ç–ø—Ä–∞–≤–∫–∞ –±–µ–∑ MessageStorage\n" .
        "–í—Ä–µ–º—è: " . date('Y-m-d H:i:s') . "\n" .
        "MessageStorage: –æ—Ç–∫–ª—é—á–µ–Ω"
    );
    printSuccess("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID: {$message->messageId})");
} catch (\Exception $e) {
    printError("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " . $e->getMessage());
}

sleep(2);

// ===========================
// –¢–ï–°–¢ 2: TelegramAPI —Å MessageStorage (–æ—Ç–∫–ª—é—á–µ–Ω)
// ===========================
printHeader("–¢–ï–°–¢ 2: TelegramAPI —Å MessageStorage (–æ—Ç–∫–ª—é—á–µ–Ω)");

printInfo("–°–æ–∑–¥–∞–Ω–∏–µ TelegramAPI —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–º MessageStorage...");
// –ë–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î —Å–æ–∑–¥–∞–µ–º MessageStorage —Å enabled = false
// –≠—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –Ω–∏–∫–∞–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ë–î –Ω–µ –±—É–¥–µ—Ç
$api2 = new TelegramAPI($testToken, $http, $logger, null);
printSuccess("TelegramAPI —Å–æ–∑–¥–∞–Ω (MessageStorage = null)");

printInfo("–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...");
try {
    $message = $api2->sendMessage(
        $testChatId,
        "üß™ –¢–ï–°–¢ #2: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å MessageStorage = null\n" .
        "–í—Ä–µ–º—è: " . date('Y-m-d H:i:s') . "\n" .
        "–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
    );
    printSuccess("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID: {$message->messageId})");
    printSuccess("MessageStorage –Ω–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞–±–æ—Ç–µ API");
} catch (\Exception $e) {
    printError("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: " . $e->getMessage());
}

sleep(2);

// ===========================
// –¢–ï–°–¢ 3: –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
// ===========================
printHeader("–¢–ï–°–¢ 3: –†–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π");

printInfo("–¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...");
try {
    $msg = $api2->sendMessage($testChatId, "üß™ –¢–ï–°–¢ #3: –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç");
    printSuccess("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID: {$msg->messageId})");
} catch (\Exception $e) {
    printError("–û—à–∏–±–∫–∞: " . $e->getMessage());
}
sleep(1);

printInfo("–°–æ–æ–±—â–µ–Ω–∏–µ —Å HTML —Ä–∞–∑–º–µ—Ç–∫–æ–π...");
try {
    $msg = $api2->sendMessage(
        $testChatId,
        "üß™ –¢–ï–°–¢ #3: <b>–ñ–∏—Ä–Ω—ã–π</b>, <i>–ö—É—Ä—Å–∏–≤</i>, <code>–ö–æ–¥</code>",
        ['parse_mode' => TelegramAPI::PARSE_MODE_HTML]
    );
    printSuccess("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π (ID: {$msg->messageId})");
} catch (\Exception $e) {
    printError("–û—à–∏–±–∫–∞: " . $e->getMessage());
}
sleep(1);

printInfo("–§–æ—Ç–æ –ø–æ URL...");
try {
    $msg = $api2->sendPhoto(
        $testChatId,
        'https://picsum.photos/400/300',
        ['caption' => 'üß™ –¢–ï–°–¢ #3: –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ']
    );
    printSuccess("–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID: {$msg->messageId})");
} catch (\Exception $e) {
    printError("–û—à–∏–±–∫–∞: " . $e->getMessage());
}
sleep(1);

// ===========================
// –¢–ï–°–¢ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
// ===========================
printHeader("–¢–ï–°–¢ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫");

printInfo("–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —á–∞—Ç...");
try {
    $api2->sendMessage(-999999999, "–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ");
    printError("–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –≤—ã–±—Ä–æ—à–µ–Ω–æ!");
} catch (\Exception $e) {
    printSuccess("–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ");
    printInfo("–û—à–∏–±–∫–∞: " . $e->getMessage());
}

// ===========================
// –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ MessageStorage
// ===========================
printHeader("–¢–ï–°–¢ 5: –ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ MessageStorage");

printInfo("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–∞...");
if (class_exists('App\Component\TelegramBot\Core\MessageStorage')) {
    printSuccess("–ö–ª–∞—Å—Å MessageStorage —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
} else {
    printError("–ö–ª–∞—Å—Å MessageStorage –Ω–µ –Ω–∞–π–¥–µ–Ω");
}

printInfo("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç...");
$reflection = new \ReflectionClass('App\Component\TelegramBot\Core\MessageStorage');
$constants = $reflection->getConstants();

$expectedConstants = [
    'LEVEL_MINIMAL' => 'minimal',
    'LEVEL_STANDARD' => 'standard',
    'LEVEL_EXTENDED' => 'extended',
    'LEVEL_FULL' => 'full',
    'DIRECTION_INCOMING' => 'incoming',
    'DIRECTION_OUTGOING' => 'outgoing',
];

foreach ($expectedConstants as $name => $value) {
    if (isset($constants[$name]) && $constants[$name] === $value) {
        printSuccess("–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ $name = '$value'");
    } else {
        printError("–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞ $name –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ");
    }
}

printInfo("\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É–±–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤...");
$methods = $reflection->getMethods(\ReflectionMethod::IS_PUBLIC);
$expectedMethods = [
    'isEnabled',
    'storeOutgoing',
    'storeIncoming',
    'getStatistics',
    'cleanupOldMessages',
];

foreach ($expectedMethods as $methodName) {
    $found = false;
    foreach ($methods as $method) {
        if ($method->getName() === $methodName && !$method->isConstructor()) {
            $found = true;
            break;
        }
    }
    
    if ($found) {
        printSuccess("–ú–µ—Ç–æ–¥ $methodName() —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω");
    } else {
        printError("–ú–µ—Ç–æ–¥ $methodName() –Ω–µ –Ω–∞–π–¥–µ–Ω");
    }
}

// ===========================
// –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ TelegramAPI
// ===========================
printHeader("–¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ TelegramAPI");

printInfo("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ TelegramAPI...");
$apiReflection = new \ReflectionClass('App\Component\TelegramBot\Core\TelegramAPI');
$constructor = $apiReflection->getConstructor();
$params = $constructor->getParameters();

$hasMessageStorageParam = false;
foreach ($params as $param) {
    if ($param->getName() === 'messageStorage') {
        $hasMessageStorageParam = true;
        $type = $param->getType();
        if ($type && $type->getName() === 'App\Component\TelegramBot\Core\MessageStorage') {
            printSuccess("–ü–∞—Ä–∞–º–µ—Ç—Ä messageStorage –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä");
            printSuccess("–¢–∏–ø –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: MessageStorage (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ)");
        }
        if ($param->allowsNull()) {
            printSuccess("–ü–∞—Ä–∞–º–µ—Ç—Ä —è–≤–ª—è–µ—Ç—Å—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º (nullable)");
        }
        break;
    }
}

if (!$hasMessageStorageParam) {
    printError("–ü–∞—Ä–∞–º–µ—Ç—Ä messageStorage –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ TelegramAPI");
}

// ===========================
// –ò–¢–û–ì–ò
// ===========================
printHeader("–ò–¢–û–ì–ò –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø");

printSuccess("‚úì TelegramAPI —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
printSuccess("‚úì –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å MessageStorage –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å");
printSuccess("‚úì –ö–ª–∞—Å—Å MessageStorage —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —Å–æ –≤—Å–µ–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏");
printSuccess("‚úì –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
printSuccess("‚úì –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ");

printWarning("\n–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ë–î —Ç—Ä–µ–±—É–µ—Ç—Å—è:");
printInfo("  1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ MySQL/MariaDB");
printInfo("  2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö");
printInfo("  3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ config/mysql.json");
printInfo("  4. –ó–∞–ø—É—Å–∫ tests/telegram_bot_message_storage_test.php");

printInfo("\n–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å MessageStorage:");
printInfo("  ‚úì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã");
printInfo("  ‚úì 4 —É—Ä–æ–≤–Ω—è —Ö—Ä–∞–Ω–µ–Ω–∏—è (minimal/standard/extended/full)");
printInfo("  ‚úì –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö –∏ –∏—Å—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π");
printInfo("  ‚úì –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º");
printInfo("  ‚úì –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π");
printInfo("  ‚úì –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è");
printInfo("  ‚úì –ì–∏–±–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è");

printInfo("\n–ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏: logs/telegram_bot_storage_integration_test.log");
printInfo("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: config/telegram_bot_message_storage.json");

printHeader("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û");
