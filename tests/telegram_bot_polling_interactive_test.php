<?php

declare(strict_types=1);

/**
 * –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ç–µ—Å—Ç PollingHandler
 * 
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π polling –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –¢—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 */

require_once __DIR__ . '/../autoload.php';

use App\Component\Http;
use App\Component\Logger;
use App\Component\TelegramBot\Core\TelegramAPI;
use App\Component\TelegramBot\Core\PollingHandler;
use App\Component\TelegramBot\Entities\Update;
use App\Component\TelegramBot\Keyboards\InlineKeyboardBuilder;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
$BOT_TOKEN = '8327641497:AAFTHb3xSTpP3Q6Peg8-OK4nTWTfF7iMWfI';
$CHAT_ID = 366442475;

function printHeader(string $title): void
{
    echo PHP_EOL;
    echo str_repeat('=', 80) . PHP_EOL;
    echo $title . PHP_EOL;
    echo str_repeat('=', 80) . PHP_EOL;
}

try {
    printHeader('–ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –¢–ï–°–¢ POLLING HANDLER');
    
    echo "ü§ñ Bot Token: " . substr($BOT_TOKEN, 0, 20) . "..." . PHP_EOL;
    echo "üí¨ Chat ID: $CHAT_ID" . PHP_EOL;
    echo PHP_EOL;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    $logger = new Logger([
        'directory' => __DIR__ . '/../logs',
        'filename' => 'telegram_bot_polling_interactive',
    ]);
    
    $http = new Http(['timeout' => 60], $logger);
    $api = new TelegramAPI($BOT_TOKEN, $http, $logger);
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    $botInfo = $api->getMe();
    echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ –±–æ—Ç—É: @{$botInfo->username}" . PHP_EOL;
    echo "   –ò–º—è: {$botInfo->firstName}" . PHP_EOL;
    echo "   ID: {$botInfo->id}" . PHP_EOL;
    
    // –£–¥–∞–ª—è–µ–º webhook –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    $webhookInfo = $api->getWebhookInfo();
    if (!empty($webhookInfo['url'])) {
        echo "üîÑ –£–¥–∞–ª–µ–Ω–∏–µ webhook..." . PHP_EOL;
        $api->deleteWebhook(true);
        sleep(1);
    }
    
    // –°–æ–∑–¥–∞–µ–º polling handler
    $polling = new PollingHandler($api, $logger);
    $polling->setTimeout(30); // 30 —Å–µ–∫—É–Ω–¥ long polling
    $polling->setLimit(10);
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    echo "üîÑ –ü—Ä–æ–ø—É—Å–∫ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π..." . PHP_EOL;
    $skipped = $polling->skipPendingUpdates();
    echo "   –ü—Ä–æ–ø—É—â–µ–Ω–æ: $skipped" . PHP_EOL;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    printHeader('–û–¢–ü–†–ê–í–ö–ê –ü–†–ò–í–ï–¢–°–¢–í–ï–ù–ù–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø');
    
    $keyboard = InlineKeyboardBuilder::makeSimple([
        '‚úÖ –¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ 1' => 'test_button_1',
        'üîî –¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ 2' => 'test_button_2',
    ], 2);
    
    $welcomeText = "üß™ *–ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –¢–ï–°–¢ POLLING*\n\n"
        . "–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ –≤ —Ä–µ–∂–∏–º–µ polling!\n\n"
        . "üìù *–ß—Ç–æ –º–æ–∂–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å:*\n"
        . "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è\n"
        . "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /echo —Ç–µ–∫—Å—Ç –¥–ª—è —ç—Ö–∞\n"
        . "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /status –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞\n"
        . "‚Ä¢ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ\n"
        . "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /stop –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n\n"
        . "‚è± Timeout: 30 —Å–µ–∫—É–Ω–¥\n"
        . "üìä Limit: 10 –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π";
    
    $api->sendMessage($CHAT_ID, $welcomeText, [
        'parse_mode' => 'Markdown',
        'reply_markup' => $keyboard,
    ]);
    
    echo "‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ" . PHP_EOL;
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º polling
    printHeader('–ó–ê–ü–£–°–ö POLLING –†–ï–ñ–ò–ú–ê');
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π... (–æ—Ç–ø—Ä–∞–≤—å—Ç–µ /stop –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)" . PHP_EOL;
    echo "üìç –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–æ—Ç @{$botInfo->username}" . PHP_EOL;
    echo str_repeat('-', 80) . PHP_EOL;
    
    $messagesProcessed = 0;
    $startTime = time();
    
    $polling->startPolling(function(Update $update) use ($api, $polling, &$messagesProcessed, $startTime) {
        $messagesProcessed++;
        
        echo PHP_EOL . "üì® –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ #{$update->updateId}" . PHP_EOL;
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if ($update->isMessage() && $update->message->text) {
            $message = $update->message;
            $text = $message->text;
            $chatId = $message->chat->id;
            $userName = $message->from->firstName ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
            
            echo "   üë§ –û—Ç: $userName (ID: {$message->from->id})" . PHP_EOL;
            echo "   üí¨ –¢–µ–∫—Å—Ç: $text" . PHP_EOL;
            
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
            if (str_starts_with($text, '/')) {
                $command = strtolower(trim(explode(' ', $text)[0], '/'));
                
                echo "   üîß –ö–æ–º–∞–Ω–¥–∞: $command" . PHP_EOL;
                
                switch ($command) {
                    case 'start':
                        $api->sendMessage($chatId, 
                            "üëã –ü—Ä–∏–≤–µ—Ç, $userName!\n\n"
                            . "–Ø —Ä–∞–±–æ—Ç–∞—é –≤ —Ä–µ–∂–∏–º–µ polling.\n"
                            . "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: " . (time() - $startTime) . " —Å–µ–∫\n"
                            . "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: $messagesProcessed"
                        );
                        echo "   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ /start" . PHP_EOL;
                        break;
                        
                    case 'echo':
                        $echoText = trim(substr($text, 5));
                        if (empty($echoText)) {
                            $echoText = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ /echo —Ç–µ–∫—Å—Ç";
                        }
                        $api->sendMessage($chatId, "üîÑ –≠—Ö–æ: $echoText");
                        echo "   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —ç—Ö–æ" . PHP_EOL;
                        break;
                        
                    case 'status':
                        $uptime = time() - $startTime;
                        $status = "üìä *–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:*\n\n"
                            . "‚úÖ –†–µ–∂–∏–º: Polling\n"
                            . "‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {$uptime} —Å–µ–∫\n"
                            . "üì® –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: $messagesProcessed\n"
                            . "üî¢ Offset: {$polling->getOffset()}\n"
                            . "ü§ñ –ê–∫—Ç–∏–≤–µ–Ω: " . ($polling->isPolling() ? '–î–∞' : '–ù–µ—Ç');
                        
                        $api->sendMessage($chatId, $status, [
                            'parse_mode' => 'Markdown',
                        ]);
                        echo "   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å" . PHP_EOL;
                        break;
                        
                    case 'stop':
                        $api->sendMessage($chatId, 
                            "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é polling...\n"
                            . "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: $messagesProcessed\n"
                            . "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: " . (time() - $startTime) . " —Å–µ–∫"
                        );
                        $polling->stopPolling();
                        echo "   üõë –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏" . PHP_EOL;
                        break;
                        
                    default:
                        $api->sendMessage($chatId, 
                            "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command\n\n"
                            . "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                            . "/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
                            . "/echo —Ç–µ–∫—Å—Ç - –≠—Ö–æ\n"
                            . "/status - –°—Ç–∞—Ç—É—Å\n"
                            . "/stop - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
                        );
                        echo "   ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞" . PHP_EOL;
                }
            } else {
                // –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –æ—Ç–≤–µ—á–∞–µ–º —ç—Ö–æ–º
                $api->sendMessage($chatId, "üìù –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: $text");
                echo "   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —ç—Ö–æ —Å–æ–æ–±—â–µ–Ω–∏—è" . PHP_EOL;
            }
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤
        elseif ($update->isCallbackQuery()) {
            $query = $update->callbackQuery;
            $data = $query->data;
            $chatId = $query->message->chat->id;
            $messageId = $query->message->messageId;
            
            echo "   üîò Callback: $data" . PHP_EOL;
            
            // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
            $api->answerCallbackQuery($query->id, [
                'text' => "–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!",
                'show_alert' => false,
            ]);
            
            // –ò–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            $newText = "‚úÖ –í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É: *$data*\n\n"
                . "–í—Ä–µ–º—è: " . date('H:i:s') . "\n"
                . "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: $messagesProcessed";
            
            $api->editMessageText($chatId, $messageId, $newText, [
                'parse_mode' => 'Markdown',
            ]);
            
            echo "   ‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω callback –∑–∞–ø—Ä–æ—Å" . PHP_EOL;
        }
        
        echo "   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ" . PHP_EOL;
        
    }, null); // null = –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–æ –≤—ã–∑–æ–≤–∞ stopPolling()
    
    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    printHeader('POLLING –û–°–¢–ê–ù–û–í–õ–ï–ù');
    echo "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: $messagesProcessed" . PHP_EOL;
    echo "‚è± –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: " . (time() - $startTime) . " —Å–µ–∫" . PHP_EOL;
    echo "üî¢ –§–∏–Ω–∞–ª—å–Ω—ã–π offset: {$polling->getOffset()}" . PHP_EOL;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    $api->sendMessage($CHAT_ID, 
        "‚úÖ *–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω*\n\n"
        . "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        . "‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: $messagesProcessed\n"
        . "‚Ä¢ –í—Ä–µ–º—è: " . (time() - $startTime) . " —Å–µ–∫\n"
        . "‚Ä¢ Offset: {$polling->getOffset()}\n\n"
        . "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ! üéâ",
        ['parse_mode' => 'Markdown']
    );
    
    echo PHP_EOL . "üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" . PHP_EOL;
    
} catch (Exception $e) {
    printHeader('–û–®–ò–ë–ö–ê');
    echo "‚ùå " . $e->getMessage() . PHP_EOL;
    echo "   –§–∞–π–ª: " . $e->getFile() . PHP_EOL;
    echo "   –°—Ç—Ä–æ–∫–∞: " . $e->getLine() . PHP_EOL;
    exit(1);
}
