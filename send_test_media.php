<?php

declare(strict_types=1);

require_once __DIR__ . '/vendor/autoload.php';

use App\Component\Telegram;
use App\Component\Logger;

/**
 * –†–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞–¥–∞–Ω–Ω—ã—Ö –≤ Telegram
 */
class TelegramRealTest
{
    private Telegram $telegram;
    private Logger $logger;
    private string $testDir;

    public function __construct(string $token, ?string $chatId = null)
    {
        $this->testDir = __DIR__ . '/test_media_real';
        $this->setupTestEnvironment();

        $this->logger = new Logger([
            'directory' => $this->testDir . '/logs',
            'file_name' => 'real_test.log',
            'log_buffer_size' => 0,
        ]);

        $config = ['token' => $token];
        if ($chatId !== null) {
            $config['default_chat_id'] = $chatId;
        }

        $this->telegram = new Telegram($config, $this->logger);
    }

    private function setupTestEnvironment(): void
    {
        if (!is_dir($this->testDir)) {
            mkdir($this->testDir, 0777, true);
        }
        if (!is_dir($this->testDir . '/logs')) {
            mkdir($this->testDir . '/logs', 0777, true);
        }

        $this->createTestMediaFiles();
    }

    private function createTestMediaFiles(): void
    {
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π 1x1 PNG)
        $pngData = base64_decode('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==');
        file_put_contents($this->testDir . '/test_image.png', $pngData);

        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
        $docContent = "–¢–ï–°–¢–û–í–´–ô –î–û–ö–£–ú–ï–ù–¢\n\n";
        $docContent .= "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∞—Å—Å–∞ Telegram.\n";
        $docContent .= "–°–æ–¥–µ—Ä–∂–∏—Ç –∫–∏—Ä–∏–ª–ª–∏—Ü—É: –ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø\n";
        $docContent .= "–ò –ª–∞—Ç–∏–Ω–∏—Ü—É: The quick brown fox jumps over the lazy dog\n";
        $docContent .= "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: " . date('Y-m-d H:i:s') . "\n";
        file_put_contents($this->testDir . '/test_document.txt', $docContent);

        // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π MP3 —Ñ–∞–π–ª (—Ç–∏—à–∏–Ω–∞ 1 —Å–µ–∫—É–Ω–¥–∞)
        $mp3Header = "\xFF\xFB\x90\x00" . str_repeat("\x00", 417);
        file_put_contents($this->testDir . '/test_audio.mp3', str_repeat($mp3Header, 10));
    }

    public function getBotInfo(): array
    {
        echo "ü§ñ –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...\n";
        try {
            $info = $this->telegram->getMe();
            echo "‚úÖ –£—Å–ø–µ—à–Ω–æ!\n";
            echo "   –ò–º—è –±–æ—Ç–∞: " . ($info['result']['first_name'] ?? 'N/A') . "\n";
            echo "   Username: @" . ($info['result']['username'] ?? 'N/A') . "\n";
            echo "   ID: " . ($info['result']['id'] ?? 'N/A') . "\n\n";
            return $info;
        } catch (Exception $e) {
            echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n\n";
            return [];
        }
    }

    public function sendTestText(string $chatId): bool
    {
        echo "üìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...\n";
        try {
            $text = "üéâ *–¢–ï–°–¢ –ö–õ–ê–°–°–ê TELEGRAM*\n\n";
            $text .= "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–ª–∞—Å—Å–∞ `App\\Component\\Telegram`\n\n";
            $text .= "‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Markdown\n";
            $text .= "‚úÖ –ö–∏—Ä–∏–ª–ª–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ\n";
            $text .= "‚úÖ –≠–º–æ–¥–∑–∏: üöÄ üéØ ‚≠ê üî•\n\n";
            $text .= "_–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: " . date('H:i:s d.m.Y') . "_";

            $result = $this->telegram->sendText($chatId, $text, [
                'parse_mode' => Telegram::PARSE_MODE_MARKDOWN,
            ]);
            
            echo "‚úÖ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n";
            echo "   Message ID: " . ($result['result']['message_id'] ?? 'N/A') . "\n\n";
            return true;
        } catch (Exception $e) {
            echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n\n";
            return false;
        }
    }

    public function sendTestPhoto(string $chatId): bool
    {
        echo "üñºÔ∏è  –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...\n";
        try {
            $result = $this->telegram->sendPhoto($chatId, $this->testDir . '/test_image.png', [
                'caption' => 'üì∏ –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 100x100 —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º',
            ]);
            
            echo "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n";
            echo "   Message ID: " . ($result['result']['message_id'] ?? 'N/A') . "\n\n";
            return true;
        } catch (Exception $e) {
            echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n\n";
            return false;
        }
    }

    public function sendTestDocument(string $chatId): bool
    {
        echo "üìÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞...\n";
        try {
            $result = $this->telegram->sendDocument($chatId, $this->testDir . '/test_document.txt', [
                'caption' => 'üìã –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π',
            ]);
            
            echo "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n";
            echo "   Message ID: " . ($result['result']['message_id'] ?? 'N/A') . "\n\n";
            return true;
        } catch (Exception $e) {
            echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n\n";
            return false;
        }
    }

    public function sendTestAudio(string $chatId): bool
    {
        echo "üéµ –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞...\n";
        try {
            $result = $this->telegram->sendAudio($chatId, $this->testDir . '/test_audio.mp3', [
                'caption' => 'üé∂ –¢–µ—Å—Ç–æ–≤—ã–π MP3 —Ñ–∞–π–ª',
                'title' => 'Test Audio',
                'performer' => 'Test Bot',
            ]);
            
            echo "‚úÖ –ê—É–¥–∏–æ—Ñ–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n";
            echo "   Message ID: " . ($result['result']['message_id'] ?? 'N/A') . "\n\n";
            return true;
        } catch (Exception $e) {
            echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n\n";
            return false;
        }
    }

    public function sendTestPhotoByUrl(string $chatId): bool
    {
        echo "üåê –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ URL...\n";
        try {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            $url = 'https://via.placeholder.com/300x200/4A90E2/ffffff?text=Test+Image';
            
            $result = $this->telegram->sendPhoto($chatId, $url, [
                'caption' => 'üåç –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –ø–æ URL',
            ]);
            
            echo "‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n";
            echo "   Message ID: " . ($result['result']['message_id'] ?? 'N/A') . "\n\n";
            return true;
        } catch (Exception $e) {
            echo "‚ùå –û—à–∏–±–∫–∞: " . $e->getMessage() . "\n\n";
            return false;
        }
    }

    public function runFullTest(string $chatId): void
    {
        echo "\n";
        echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n";
        echo "‚ïë         –†–ï–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ö–õ–ê–°–°–ê TELEGRAM                     ‚ïë\n";
        echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n";

        $this->getBotInfo();
        
        echo "üì® Chat ID: {$chatId}\n\n";
        echo str_repeat('‚îÄ', 60) . "\n\n";

        $results = [
            '–¢–µ–∫—Å—Ç' => $this->sendTestText($chatId),
            '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—Ñ–∞–π–ª)' => $this->sendTestPhoto($chatId),
            '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (URL)' => $this->sendTestPhotoByUrl($chatId),
            '–î–æ–∫—É–º–µ–Ω—Ç' => $this->sendTestDocument($chatId),
            '–ê—É–¥–∏–æ' => $this->sendTestAudio($chatId),
        ];

        echo str_repeat('‚îÄ', 60) . "\n\n";
        echo "üìä –ò–¢–û–ì–ò:\n\n";

        $success = 0;
        $total = count($results);

        foreach ($results as $type => $result) {
            $icon = $result ? '‚úÖ' : '‚ùå';
            echo "  {$icon} {$type}\n";
            if ($result) $success++;
        }

        echo "\n";
        echo "–£—Å–ø–µ—à–Ω–æ: {$success}/{$total}\n";
        
        if ($success === $total) {
            echo "\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!\n";
        } else {
            echo "\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.\n";
        }

        echo "\nüìù –õ–æ–≥ —Ñ–∞–π–ª: " . $this->testDir . "/logs/real_test.log\n\n";
    }
}

// –ó–ê–ü–£–°–ö
$token = '8327641497:AAFTHb3xSTpP3Q6Peg8-OK4nTWTfF7iMWfI';

echo "\n";
echo "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—à–µ–≥–æ Chat ID:\n";
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ @userinfobot –≤ Telegram\n";
echo "2. –ù–∞–∂–º–∏—Ç–µ /start\n";
echo "3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à ID\n\n";
echo "–ò–ª–∏ —É–∫–∞–∂–∏—Ç–µ Chat ID —Å—Ä–∞–∑—É: php send_test_media.php YOUR_CHAT_ID\n\n";

if ($argc > 1) {
    $chatId = $argv[1];
    $test = new TelegramRealTest($token);
    $test->runFullTest($chatId);
} else {
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    $test = new TelegramRealTest($token);
    $test->getBotInfo();
    
    echo "‚ùì –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Chat ID: ";
    $chatId = trim((string)fgets(STDIN));
    
    if (!empty($chatId)) {
        echo "\n";
        $test->runFullTest($chatId);
    } else {
        echo "‚ùå Chat ID –Ω–µ —É–∫–∞–∑–∞–Ω.\n";
        exit(1);
    }
}
