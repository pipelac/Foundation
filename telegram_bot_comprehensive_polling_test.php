<?php

declare(strict_types=1);

/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TelegramBot –≤ —Ä–µ–∂–∏–º–µ Polling
 * –í–µ—Ä—Å–∏—è 2.0 - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è
 */

require_once __DIR__ . '/autoload.php';

use App\Config\ConfigLoader;
use App\Component\Http;
use App\Component\Logger;
use App\Component\MySQLConnectionFactory;
use App\Component\Telegram;
use App\Component\TelegramBot\Core\TelegramAPI;
use App\Component\TelegramBot\Core\PollingHandler;
use App\Component\TelegramBot\Core\ConversationManager;
use App\Component\TelegramBot\Core\MessageStorage;
use App\Component\TelegramBot\Keyboards\InlineKeyboardBuilder;
use App\Component\TelegramBot\Keyboards\ReplyKeyboardBuilder;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
$BOT_TOKEN = '8327641497:AAFTHb3xSTpP3Q6Peg8-OK4nTWTfF7iMWfI';
$CHAT_ID = 366442475;

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n";
echo "‚ïë   –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAMBOT - POLLING MODE          ‚ïë\n";
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n\n";

// –õ–æ–≥–≥–µ—Ä
$logger = new Logger([
    'directory' => __DIR__ . '/logs',
    'fileName' => 'telegram_bot_polling_test.log',
    'maxFiles' => 7,
]);

$logger->info('=== –ù–ê–ß–ê–õ–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===');

// MySQL
$configDir = __DIR__ . '/config';
$mysqlConfig = ConfigLoader::load($configDir . '/mysql.json');
$conversationsConfig = ConfigLoader::load($configDir . '/telegram_bot_conversations.json');
$messageStorageConfig = ConfigLoader::load($configDir . '/telegram_bot_message_storage.json');

try {
    $factory = new MySQLConnectionFactory($mysqlConfig, $logger);
    $db = $factory->getConnection('main');
    echo "‚úÖ MySQL –ø–æ–¥–∫–ª—é—á–µ–Ω\n";
} catch (Exception $e) {
    die("‚ùå MySQL –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω: {$e->getMessage()}\n");
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
$conversationManager = new ConversationManager($db, $logger, $conversationsConfig['conversations']);
echo ($conversationManager->isEnabled() ? "‚úÖ" : "‚ö†Ô∏è ") . " ConversationManager\n";

$messageStorage = new MessageStorage($db, $logger, $messageStorageConfig['message_storage']);
echo ($messageStorage->isEnabled() ? "‚úÖ" : "‚ö†Ô∏è ") . " MessageStorage\n";

$http = new Http(['timeout' => 60], $logger);
$api = new TelegramAPI($BOT_TOKEN, $http, $logger, $messageStorage);
$telegram = new Telegram(['token' => $BOT_TOKEN], $logger);

$polling = new PollingHandler($api, $logger);
$polling->setTimeout(30)->setLimit(100)->setAllowedUpdates(['message', 'callback_query']);

$skipped = $polling->skipPendingUpdates();
echo "‚úÖ PollingHandler (–ø—Ä–æ–ø—É—â–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö: $skipped)\n\n";

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
try {
    $telegram->sendText((string)$CHAT_ID, "üöÄ *–ù–ê–ß–ê–õ–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø*\n\n" .
        "–Ø –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n" .
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–ª–µ–¥—É–π—Ç–µ –∏–º.", [
        'parse_mode' => Telegram::PARSE_MODE_MARKDOWN
    ]);
} catch (Exception $e) {
    echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {$e->getMessage()}\n";
}

sleep(2);

// ============================================================================
// –¢–ï–°–¢ 1: –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
// ============================================================================

echo "\n‚ïê‚ïê‚ïê –¢–ï–°–¢ 1: –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚ïê‚ïê‚ïê\n\n";

$telegram->sendText((string)$CHAT_ID, "üìù *–¢–µ—Å—Ç 1*: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞\n\n" .
    "–Ø –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ. –û—Ç–≤–µ—Ç—å—Ç–µ –ª—é–±—ã–º —Ç–µ–∫—Å—Ç–æ–º.", [
    'parse_mode' => Telegram::PARSE_MODE_MARKDOWN
]);

sleep(1);

$api->sendMessage($CHAT_ID, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ üëã\n\n–û—Ç–≤–µ—Ç—å—Ç–µ –ª—é–±—ã–º —Ç–µ–∫—Å—Ç–æ–º.");
echo "üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n";

// –ñ–¥–µ–º –æ—Ç–≤–µ—Ç–∞
$received = false;
for ($i = 0; $i < 15; $i++) {
    $updates = $polling->pollOnce();
    
    foreach ($updates as $update) {
        if ($update->isMessage() && $update->message->text && $update->message->chat->id === $CHAT_ID) {
            $text = $update->message->text;
            echo "üì© –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: $text\n";
            
            $api->sendMessage($CHAT_ID, "‚úÖ –ü–æ–ª—É—á–∏–ª: $text");
            $received = true;
            break 2;
        }
    }
    
    sleep(2);
}

if ($received) {
    echo "‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω\n";
    $telegram->sendText((string)$CHAT_ID, "‚úÖ –¢–µ—Å—Ç 1 –∑–∞–≤–µ—Ä—à–µ–Ω");
} else {
    echo "‚ö†Ô∏è  –¢–µ—Å—Ç 1: –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n";
}

sleep(2);

// ============================================================================
// –¢–ï–°–¢ 2: –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã
// ============================================================================

echo "\n‚ïê‚ïê‚ïê –¢–ï–°–¢ 2: –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã ‚ïê‚ïê‚ïê\n\n";

$telegram->sendText((string)$CHAT_ID, "üì∏ *–¢–µ—Å—Ç 2*: –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã\n\n" .
    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ, –¥–æ–∫—É–º–µ–Ω—Ç –∏–ª–∏ –≤–∏–¥–µ–æ.\n" .
    "–Ø –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ.", [
    'parse_mode' => Telegram::PARSE_MODE_MARKDOWN
]);

$mediaReceived = false;
for ($i = 0; $i < 20; $i++) {
    $updates = $polling->pollOnce();
    
    foreach ($updates as $update) {
        if ($update->isMessage() && $update->message->chat->id === $CHAT_ID) {
            $message = $update->message;
            
            // –§–æ—Ç–æ
            if (!empty($message->photo)) {
                $photo = end($message->photo);
                echo "üì∏ –ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ\n";
                $api->sendPhoto($CHAT_ID, $photo->fileId, ['caption' => '‚úÖ –í–∞—à–µ —Ñ–æ—Ç–æ']);
                $mediaReceived = true;
                break 2;
            }
            
            // –î–æ–∫—É–º–µ–Ω—Ç
            if ($message->document) {
                echo "üìÑ –ü–æ–ª—É—á–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: {$message->document->fileName}\n";
                $api->sendDocument($CHAT_ID, $message->document->fileId, ['caption' => '‚úÖ –í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç']);
                $mediaReceived = true;
                break 2;
            }
            
            // –í–∏–¥–µ–æ
            if ($message->video) {
                echo "üé• –ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ\n";
                $api->sendVideo($CHAT_ID, $message->video->fileId, ['caption' => '‚úÖ –í–∞—à–µ –≤–∏–¥–µ–æ']);
                $mediaReceived = true;
                break 2;
            }
            
            // –ì–æ–ª–æ—Å–æ–≤–æ–µ
            if ($message->voice) {
                echo "üé§ –ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ\n";
                $api->sendVoice($CHAT_ID, $message->voice->fileId);
                $mediaReceived = true;
                break 2;
            }
        }
    }
    
    sleep(2);
}

if ($mediaReceived) {
    echo "‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω\n";
    $telegram->sendText((string)$CHAT_ID, "‚úÖ –¢–µ—Å—Ç 2 –∑–∞–≤–µ—Ä—à–µ–Ω");
} else {
    echo "‚ö†Ô∏è  –¢–µ—Å—Ç 2: –º–µ–¥–∏–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ\n";
}

sleep(2);

// ============================================================================
// –¢–ï–°–¢ 3: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
// ============================================================================

echo "\n‚ïê‚ïê‚ïê –¢–ï–°–¢ 3: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ‚ïê‚ïê‚ïê\n\n";

$telegram->sendText((string)$CHAT_ID, "‚å®Ô∏è  *–¢–µ—Å—Ç 3*: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞\n\n" .
    "–°–µ–π—á–∞—Å –æ—Ç–ø—Ä–∞–≤–ª—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É.", [
    'parse_mode' => Telegram::PARSE_MODE_MARKDOWN
]);

sleep(1);

$keyboard = InlineKeyboardBuilder::make()
    ->addCallbackButton('‚úÖ –ö–Ω–æ–ø–∫–∞ 1', 'btn_1')
    ->addCallbackButton('üîî –ö–Ω–æ–ø–∫–∞ 2', 'btn_2')
    ->row()
    ->addCallbackButton('‚öôÔ∏è –ö–Ω–æ–ø–∫–∞ 3', 'btn_3')
    ->build();

$api->sendMessage($CHAT_ID, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É:", ['reply_markup' => $keyboard]);
echo "üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞\n";

$buttonPressed = false;
for ($i = 0; $i < 15; $i++) {
    $updates = $polling->pollOnce();
    
    foreach ($updates as $update) {
        if ($update->isCallbackQuery() && $update->callbackQuery->message->chat->id === $CHAT_ID) {
            $query = $update->callbackQuery;
            echo "üëÜ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: {$query->data}\n";
            
            $api->answerCallbackQuery($query->id, ['text' => '‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ!']);
            $api->editMessageText($CHAT_ID, $query->message->messageId, "‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏: {$query->data}");
            
            $buttonPressed = true;
            break 2;
        }
    }
    
    sleep(2);
}

if ($buttonPressed) {
    echo "‚úÖ –¢–µ—Å—Ç 3 –ø—Ä–æ–π–¥–µ–Ω\n";
    $telegram->sendText((string)$CHAT_ID, "‚úÖ –¢–µ—Å—Ç 3 –∑–∞–≤–µ—Ä—à–µ–Ω");
} else {
    echo "‚ö†Ô∏è  –¢–µ—Å—Ç 3: –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–∂–∞—Ç–∞\n";
}

sleep(2);

// ============================================================================
// –¢–ï–°–¢ 4: Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
// ============================================================================

echo "\n‚ïê‚ïê‚ïê –¢–ï–°–¢ 4: Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ‚ïê‚ïê‚ïê\n\n";

$telegram->sendText((string)$CHAT_ID, "‚å®Ô∏è  *–¢–µ—Å—Ç 4*: Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞\n\n" .
    "–û—Ç–ø—Ä–∞–≤–ª—é –æ–±—ã—á–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É.", [
    'parse_mode' => Telegram::PARSE_MODE_MARKDOWN
]);

sleep(1);

$keyboard = ReplyKeyboardBuilder::make()
    ->addButton('üî¥ –ö—Ä–∞—Å–Ω–∞—è')
    ->addButton('üü¢ –ó–µ–ª–µ–Ω–∞—è')
    ->row()
    ->addButton('üîµ –°–∏–Ω—è—è')
    ->addButton('‚ùå –£–¥–∞–ª–∏—Ç—å')
    ->resizeKeyboard()
    ->build();

$api->sendMessage($CHAT_ID, "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç:", ['reply_markup' => $keyboard]);
echo "üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞\n";

$replyReceived = false;
for ($i = 0; $i < 15; $i++) {
    $updates = $polling->pollOnce();
    
    foreach ($updates as $update) {
        if ($update->isMessage() && $update->message->text && $update->message->chat->id === $CHAT_ID) {
            $text = $update->message->text;
            echo "üëÜ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: $text\n";
            
            if ($text === '‚ùå –£–¥–∞–ª–∏—Ç—å') {
                $api->sendMessage($CHAT_ID, "‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∞", [
                    'reply_markup' => ['remove_keyboard' => true]
                ]);
            } else {
                $api->sendMessage($CHAT_ID, "‚úÖ –í—ã–±—Ä–∞–Ω: $text");
            }
            
            $replyReceived = true;
            break 2;
        }
    }
    
    sleep(2);
}

if ($replyReceived) {
    echo "‚úÖ –¢–µ—Å—Ç 4 –ø—Ä–æ–π–¥–µ–Ω\n";
    $telegram->sendText((string)$CHAT_ID, "‚úÖ –¢–µ—Å—Ç 4 –∑–∞–≤–µ—Ä—à–µ–Ω", [
        'reply_markup' => ['remove_keyboard' => true]
    ]);
} else {
    echo "‚ö†Ô∏è  –¢–µ—Å—Ç 4: –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–∂–∞—Ç–∞\n";
}

sleep(2);

// ============================================================================
// –¢–ï–°–¢ 5: –î–∏–∞–ª–æ–≥ —Å ConversationManager
// ============================================================================

echo "\n‚ïê‚ïê‚ïê –¢–ï–°–¢ 5: –î–∏–∞–ª–æ–≥ —Å ConversationManager ‚ïê‚ïê‚ïê\n\n";

if (!$conversationManager->isEnabled()) {
    echo "‚ö†Ô∏è  ConversationManager –æ—Ç–∫–ª—é—á–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç 5\n";
} else {
    $telegram->sendText((string)$CHAT_ID, "üí¨ *–¢–µ—Å—Ç 5*: –î–∏–∞–ª–æ–≥ —Å –ø–∞–º—è—Ç—å—é\n\n" .
        "–ü—Ä–æ–π–¥–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å 3 —à–∞–≥–∞–º–∏:\n" .
        "1. –ò–º—è\n" .
        "2. –í–æ–∑—Ä–∞—Å—Ç\n" .
        "3. –ì–æ—Ä–æ–¥", [
        'parse_mode' => Telegram::PARSE_MODE_MARKDOWN
    ]);
    
    sleep(1);
    
    $keyboard = InlineKeyboardBuilder::make()
        ->addCallbackButton('üöÄ –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', 'start_reg')
        ->build();
    
    $api->sendMessage($CHAT_ID, "–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?", ['reply_markup' => $keyboard]);
    
    // –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞
    $dialogStarted = false;
    for ($i = 0; $i < 15; $i++) {
        $updates = $polling->pollOnce();
        
        foreach ($updates as $update) {
            if ($update->isCallbackQuery() && 
                $update->callbackQuery->data === 'start_reg' && 
                $update->callbackQuery->message->chat->id === $CHAT_ID) {
                
                $query = $update->callbackQuery;
                $api->answerCallbackQuery($query->id);
                
                // –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥
                $conversationManager->startConversation($CHAT_ID, $query->from->id, 'awaiting_name', []);
                $api->sendMessage($CHAT_ID, "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?");
                
                $dialogStarted = true;
                echo "üí¨ –î–∏–∞–ª–æ–≥ –Ω–∞—á–∞—Ç\n";
                break 2;
            }
        }
        
        sleep(2);
    }
    
    if ($dialogStarted) {
        // –®–∞–≥ 1: –ò–º—è
        $nameReceived = false;
        for ($i = 0; $i < 15; $i++) {
            $updates = $polling->pollOnce();
            
            foreach ($updates as $update) {
                if ($update->isMessage() && $update->message->text && $update->message->chat->id === $CHAT_ID) {
                    $conv = $conversationManager->getConversation($CHAT_ID, $update->message->from->id);
                    
                    if ($conv && $conv['state'] === 'awaiting_name') {
                        $name = $update->message->text;
                        echo "‚úçÔ∏è  –ò–º—è: $name\n";
                        
                        $conversationManager->updateConversation($CHAT_ID, $update->message->from->id, 'awaiting_age', ['name' => $name]);
                        $api->sendMessage($CHAT_ID, "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, $name! –°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?");
                        
                        $nameReceived = true;
                        break 2;
                    }
                }
            }
            
            sleep(2);
        }
        
        // –®–∞–≥ 2: –í–æ–∑—Ä–∞—Å—Ç
        if ($nameReceived) {
            $ageReceived = false;
            for ($i = 0; $i < 15; $i++) {
                $updates = $polling->pollOnce();
                
                foreach ($updates as $update) {
                    if ($update->isMessage() && $update->message->text && $update->message->chat->id === $CHAT_ID) {
                        $conv = $conversationManager->getConversation($CHAT_ID, $update->message->from->id);
                        
                        if ($conv && $conv['state'] === 'awaiting_age') {
                            $age = $update->message->text;
                            
                            if (!is_numeric($age)) {
                                $api->sendMessage($CHAT_ID, "‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ");
                                continue;
                            }
                            
                            echo "‚úçÔ∏è  –í–æ–∑—Ä–∞—Å—Ç: $age\n";
                            
                            $conversationManager->updateConversation($CHAT_ID, $update->message->from->id, 'awaiting_city', ['age' => $age]);
                            $api->sendMessage($CHAT_ID, "–ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?");
                            
                            $ageReceived = true;
                            break 2;
                        }
                    }
                }
                
                sleep(2);
            }
            
            // –®–∞–≥ 3: –ì–æ—Ä–æ–¥
            if ($ageReceived) {
                for ($i = 0; $i < 15; $i++) {
                    $updates = $polling->pollOnce();
                    
                    foreach ($updates as $update) {
                        if ($update->isMessage() && $update->message->text && $update->message->chat->id === $CHAT_ID) {
                            $conv = $conversationManager->getConversation($CHAT_ID, $update->message->from->id);
                            
                            if ($conv && $conv['state'] === 'awaiting_city') {
                                $city = $update->message->text;
                                echo "‚úçÔ∏è  –ì–æ—Ä–æ–¥: $city\n";
                                
                                $data = $conv['data'];
                                
                                $summary = "‚úÖ *–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!*\n\n" .
                                    "–ò–º—è: {$data['name']}\n" .
                                    "–í–æ–∑—Ä–∞—Å—Ç: {$data['age']}\n" .
                                    "–ì–æ—Ä–æ–¥: $city";
                                
                                $api->sendMessage($CHAT_ID, $summary, ['parse_mode' => TelegramAPI::PARSE_MODE_MARKDOWN]);
                                
                                $conversationManager->endConversation($CHAT_ID, $update->message->from->id);
                                
                                echo "‚úÖ –¢–µ—Å—Ç 5 –ø—Ä–æ–π–¥–µ–Ω\n";
                                $telegram->sendText((string)$CHAT_ID, "‚úÖ –¢–µ—Å—Ç 5 –∑–∞–≤–µ—Ä—à–µ–Ω");
                                break 2;
                            }
                        }
                    }
                    
                    sleep(2);
                }
            }
        }
    }
}

sleep(2);

// ============================================================================
// –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò –î–ê–ú–ü–´
// ============================================================================

echo "\n‚ïê‚ïê‚ïê –°–¢–ê–¢–ò–°–¢–ò–ö–ê ‚ïê‚ïê‚ïê\n\n";

if ($conversationManager->isEnabled()) {
    $stats = $conversationManager->getStatistics();
    echo "üìä –î–∏–∞–ª–æ–≥–æ–≤: {$stats['total']}\n";
}

if ($messageStorage->isEnabled()) {
    try {
        $result = $db->query("SELECT COUNT(*) as total FROM telegram_bot_messages");
        $total = $result[0]['total'] ?? 0;
        echo "üìä –°–æ–æ–±—â–µ–Ω–∏–π –≤ –ë–î: $total\n";
    } catch (Exception $e) {
        echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {$e->getMessage()}\n";
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–æ–≤
echo "\nüíæ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–æ–≤...\n";

$dumpDir = __DIR__ . '/mysql';
$timestamp = date('Y-m-d_H-i-s');

$tables = ['telegram_bot_users', 'telegram_bot_conversations', 'telegram_bot_messages'];

foreach ($tables as $table) {
    $dumpFile = "$dumpDir/{$table}_$timestamp.sql";
    $command = "sudo mysqldump -u root utilities_db $table > $dumpFile 2>&1";
    exec($command, $output, $returnCode);
    
    if ($returnCode === 0 && file_exists($dumpFile)) {
        echo "   ‚úÖ $table\n";
    } else {
        echo "   ‚ö†Ô∏è  $table - –æ—à–∏–±–∫–∞\n";
    }
}

// –§–∏–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
echo "\n";
$telegram->sendText((string)$CHAT_ID, "üéâ *–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!*\n\n" .
    "–í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.\n" .
    "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –¥–∞–º–ø—ã –ë–î.", [
    'parse_mode' => Telegram::PARSE_MODE_MARKDOWN
]);

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n";
echo "‚ïë            –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!                     ‚ïë\n";
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n";

$logger->info('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
