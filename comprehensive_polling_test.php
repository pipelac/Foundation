<?php

declare(strict_types=1);

require_once __DIR__ . '/autoload.php';

use App\Component\Logger;
use App\Component\MySQL;
use App\Component\Http;
use App\Component\TelegramBot\Core\TelegramAPI;
use App\Component\TelegramBot\Core\PollingHandler;
use App\Component\TelegramBot\Core\ConversationManager;
use App\Component\TelegramBot\Keyboards\InlineKeyboardBuilder;
use App\Component\TelegramBot\Keyboards\ReplyKeyboardBuilder;
use App\Component\TelegramBot\Entities\Update;

/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TelegramBot –≤ —Ä–µ–∂–∏–º–µ Polling
 * 
 * 6 —É—Ä–æ–≤–Ω–µ–π —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
 * 1. –ù–∞—á–∞–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
 * 2. –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏
 * 3. –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏
 * 4. –î–∏–∞–ª–æ–≥–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
 * 5. –°–ª–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 * 6. –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏
 */

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
$logger = new Logger([
    'directory' => __DIR__ . '/logs',
    'file_name' => 'comprehensive_test.log',
    'max_files' => 5,
    'max_file_size' => 10485760, // 10 MB
]);
$logger->info('========================================');
$logger->info('–ó–ê–ü–£–°–ö –ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø TELEGRAMBOT');
$logger->info('========================================');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
$botToken = '8327641497:AAFTHb3xSTpP3Q6Peg8-OK4nTWTfF7iMWfI';
$testChatId = 366442475;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MySQL
$dbConfig = [
    'host' => 'localhost',
    'database' => 'test_telegram_bot',
    'username' => 'root',
    'password' => '',
    'charset' => 'utf8mb4',
];

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É mysql –¥–ª—è –¥–∞–º–ø–æ–≤
if (!is_dir(__DIR__ . '/mysql')) {
    mkdir(__DIR__ . '/mysql', 0755, true);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
$api = null;
$db = null;
$conversationManager = null;
$pollingHandler = null;

try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MySQL
    $logger->info('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL...');
    $db = new MySQL($dbConfig, $logger);
    $logger->info('‚úì MySQL –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTP –∫–ª–∏–µ–Ω—Ç–∞
    $logger->info('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è HTTP –∫–ª–∏–µ–Ω—Ç–∞...');
    $http = new Http([
        'timeout' => 60,
        'connect_timeout' => 10,
    ], $logger);
    $logger->info('‚úì HTTP –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram API
    $logger->info('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram API...');
    $api = new TelegramAPI($botToken, $http, $logger);
    $logger->info('‚úì Telegram API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ConversationManager
    $logger->info('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ConversationManager...');
    $conversationManager = new ConversationManager(
        $db,
        $logger,
        [
            'enabled' => true,
            'timeout' => 7200, // 2 —á–∞—Å–∞
            'auto_create_tables' => true,
        ]
    );
    $logger->info('‚úì ConversationManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PollingHandler
    $logger->info('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PollingHandler...');
    $pollingHandler = new PollingHandler($api, $logger);
    $pollingHandler->setTimeout(30);
    $pollingHandler->setLimit(10);
    $logger->info('‚úì PollingHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    $logger->info('–ü—Ä–æ–ø—É—Å–∫ —Å—Ç–∞—Ä—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...');
    $skipped = $pollingHandler->skipPendingUpdates();
    $logger->info("‚úì –ü—Ä–æ–ø—É—â–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: $skipped");

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    $api->sendMessage(
        $testChatId,
        "üöÄ <b>–ù–ê–ß–ê–õ–û –ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø</b>\n\n" .
        "–¢–µ—Å—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞: Polling Mode\n" .
        "MySQL: –ü–æ–¥–∫–ª—é—á–µ–Ω –∏ –≥–æ—Ç–æ–≤\n" .
        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π: 6\n\n" .
        "üìã –ë—É–¥—É—Ç –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã:\n" .
        "‚Ä¢ –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n" .
        "‚Ä¢ –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã)\n" .
        "‚Ä¢ –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã (inline –∏ reply)\n" .
        "‚Ä¢ –î–∏–∞–ª–æ–≥–∏ —Å –ø–∞–º—è—Ç—å—é\n" .
        "‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫\n" .
        "‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏\n\n" .
        "‚è± –¢–∞–π–º–∞—É—Ç –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è: 15 —Å–µ–∫—É–Ω–¥\n" .
        "ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é!",
        ['parse_mode' => TelegramAPI::PARSE_MODE_HTML]
    );

    $logger->info('========================================');
    $logger->info('–£–†–û–í–ï–ù–¨ 1: –ù–ê–ß–ê–õ–¨–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò');
    $logger->info('========================================');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –£—Ä–æ–≤–Ω—è 1
    $api->sendMessage(
        $testChatId,
        "üìù <b>–£–†–û–í–ï–ù–¨ 1: –ù–ê–ß–ê–õ–¨–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò</b>\n\n" .
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.\n\n" .
        "‚úâÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É...",
        ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
    );

    $logger->info('–û–∂–∏–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    // –£—Ä–æ–≤–µ–Ω—å 1: –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    $level1Completed = false;
    $level1Timeout = time() + 15;
    $attemptCount = 0;
    
    while (!$level1Completed && time() < $level1Timeout) {
        $updates = $pollingHandler->pollOnce();
        
        foreach ($updates as $update) {
            if ($update->message && $update->message->text) {
                $userId = $update->message->from->id;
                $chatId = $update->message->chat->id;
                $text = $update->message->text;
                
                $logger->info("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: $text –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $userId");
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                $conversationManager->saveUser(
                    $userId,
                    $update->message->from->firstName,
                    $update->message->from->username,
                    $update->message->from->lastName
                );
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
                $api->sendMessage(
                    $chatId,
                    "‚úÖ <b>–£—Ä–æ–≤–µ–Ω—å 1 –ø—Ä–æ–π–¥–µ–Ω!</b>\n\n" .
                    "–ü–æ–ª—É—á–µ–Ω–æ: <code>" . htmlspecialchars($text) . "</code>\n" .
                    "–û—Ç: " . htmlspecialchars($update->message->from->firstName ?? 'Unknown') . "\n\n" .
                    "üéâ –ë–∞–∑–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!",
                    ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                );
                
                $level1Completed = true;
                $logger->info('‚úì –£—Ä–æ–≤–µ–Ω—å 1 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
                break;
            }
        }
        
        if (!$level1Completed) {
            sleep(1);
        }
    }

    if (!$level1Completed) {
        $api->sendMessage(
            $testChatId,
            "‚è± –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è. –≠–º—É–ª—è—Ü–∏—è –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...",
            ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
        );
        $logger->warning('–¢–∞–π–º–∞—É—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ 1, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
    }

    sleep(2);

    // ========================================
    // –£–†–û–í–ï–ù–¨ 2: –ë–ê–ó–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò –° –§–ê–ô–õ–ê–ú–ò
    // ========================================
    $logger->info('========================================');
    $logger->info('–£–†–û–í–ï–ù–¨ 2: –ë–ê–ó–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò –° –§–ê–ô–õ–ê–ú–ò');
    $logger->info('========================================');

    $api->sendMessage(
        $testChatId,
        "üìù <b>–£–†–û–í–ï–ù–¨ 2: –ë–ê–ó–û–í–´–ï –û–ü–ï–†–ê–¶–ò–ò –° –§–ê–ô–õ–ê–ú–ò</b>\n\n" .
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤.\n\n" .
        "üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Ñ–æ—Ç–æ...",
        ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
    );

    $logger->info('–û–∂–∏–¥–∞–Ω–∏–µ —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    $level2Completed = false;
    $level2Timeout = time() + 15;
    
    while (!$level2Completed && time() < $level2Timeout) {
        $updates = $pollingHandler->pollOnce();
        
        foreach ($updates as $update) {
            if ($update->message && $update->message->photo) {
                $chatId = $update->message->chat->id;
                $photos = $update->message->photo;
                $largestPhoto = end($photos);
                
                $logger->info("–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ: file_id={$largestPhoto->fileId}");
                
                $api->sendMessage(
                    $chatId,
                    "‚úÖ <b>–£—Ä–æ–≤–µ–Ω—å 2 –ø—Ä–æ–π–¥–µ–Ω!</b>\n\n" .
                    "–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ\n" .
                    "File ID: <code>{$largestPhoto->fileId}</code>\n" .
                    "–†–∞–∑–º–µ—Ä: {$largestPhoto->width}x{$largestPhoto->height}\n\n" .
                    "üì¶ –ú–µ–¥–∏–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!",
                    ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                );
                
                $level2Completed = true;
                $logger->info('‚úì –£—Ä–æ–≤–µ–Ω—å 2 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
                break;
            }
        }
        
        if (!$level2Completed) {
            sleep(1);
        }
    }

    if (!$level2Completed) {
        $api->sendMessage(
            $testChatId,
            "‚è± –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–≤–Ω—é...",
            ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
        );
        $logger->warning('–¢–∞–π–º–∞—É—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ 2');
    }

    sleep(2);

    // ========================================
    // –£–†–û–í–ï–ù–¨ 3: –û–ü–ï–†–ê–¶–ò–ò –° –ö–õ–ê–í–ò–ê–¢–£–†–ê–ú–ò
    // ========================================
    $logger->info('========================================');
    $logger->info('–£–†–û–í–ï–ù–¨ 3: –û–ü–ï–†–ê–¶–ò–ò –° –ö–õ–ê–í–ò–ê–¢–£–†–ê–ú–ò');
    $logger->info('========================================');

    $api->sendMessage(
        $testChatId,
        "üìù <b>–£–†–û–í–ï–ù–¨ 3: –û–ü–ï–†–ê–¶–ò–ò –° –ö–õ–ê–í–ò–ê–¢–£–†–ê–ú–ò</b>\n\n" .
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã inline –∏ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä.\n\n" .
        "–¢–µ—Å—Ç 3.1: Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞",
        TelegramAPI::PARSE_MODE_HTML,
        replyMarkup: ReplyKeyboardBuilder::make()
            ->addButton('‚úÖ –î–∞')
            ->addButton('‚ùå –ù–µ—Ç')
            ->row()
            ->addButton('üîô –ù–∞–∑–∞–¥')
            ->resizeKeyboard()
            ->oneTime()
            ->build()
    );

    $logger->info('–û–∂–∏–¥–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –Ω–∞ reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ...');
    
    $level3_1Completed = false;
    $level3_1Timeout = time() + 15;
    
    while (!$level3_1Completed && time() < $level3_1Timeout) {
        $updates = $pollingHandler->pollOnce();
        
        foreach ($updates as $update) {
            if ($update->message && $update->message->text && in_array($update->message->text, ['‚úÖ –î–∞', '‚ùå –ù–µ—Ç', 'üîô –ù–∞–∑–∞–¥'])) {
                $chatId = $update->message->chat->id;
                $text = $update->message->text;
                
                $logger->info("–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: $text");
                
                $api->sendMessage(
                    $chatId,
                    "‚úÖ Reply –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!\n\n–í—ã –≤—ã–±—Ä–∞–ª–∏: $text\n\n" .
                    "–¢–µ—Å—Ç 3.2: Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞\n–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É:",
                    TelegramAPI::PARSE_MODE_HTML,
                    replyMarkup: InlineKeyboardBuilder::make()
                        ->addCallbackButton('üî¥ –ö–Ω–æ–ø–∫–∞ 1', 'btn_1')
                        ->addCallbackButton('üü¢ –ö–Ω–æ–ø–∫–∞ 2', 'btn_2')
                        ->row()
                        ->addCallbackButton('üîµ –ö–Ω–æ–ø–∫–∞ 3', 'btn_3')
                        ->build()
                );
                
                $level3_1Completed = true;
                break;
            }
        }
        
        if (!$level3_1Completed) {
            sleep(1);
        }
    }

    $logger->info('–û–∂–∏–¥–∞–Ω–∏–µ callback –æ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã...');
    
    $level3_2Completed = false;
    $level3_2Timeout = time() + 15;
    
    while (!$level3_2Completed && time() < $level3_2Timeout) {
        $updates = $pollingHandler->pollOnce();
        
        foreach ($updates as $update) {
            if ($update->callbackQuery) {
                $callbackData = $update->callbackQuery->data;
                $chatId = $update->callbackQuery->message->chat->id;
                $messageId = $update->callbackQuery->message->messageId;
                
                $logger->info("–ü–æ–ª—É—á–µ–Ω callback: $callbackData");
                
                $api->answerCallbackQuery($update->callbackQuery->id, 'Callback –ø–æ–ª—É—á–µ–Ω!');
                
                $api->editMessageText(
                    $chatId,
                    $messageId,
                    "‚úÖ <b>–£—Ä–æ–≤–µ–Ω—å 3 –ø—Ä–æ–π–¥–µ–Ω!</b>\n\n" .
                    "Callback data: <code>$callbackData</code>\n\n" .
                    "üéπ –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!",
                    ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                );
                
                $level3_2Completed = true;
                $logger->info('‚úì –£—Ä–æ–≤–µ–Ω—å 3 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
                break;
            }
        }
        
        if (!$level3_2Completed) {
            sleep(1);
        }
    }

    sleep(2);

    // ========================================
    // –£–†–û–í–ï–ù–¨ 4: –î–ò–ê–õ–û–ì–û–í–´–ï –°–¶–ï–ù–ê–†–ò–ò
    // ========================================
    $logger->info('========================================');
    $logger->info('–£–†–û–í–ï–ù–¨ 4: –î–ò–ê–õ–û–ì–û–í–´–ï –°–¶–ï–ù–ê–†–ò–ò –° –ö–û–ù–¢–ï–ö–°–¢–û–ú');
    $logger->info('========================================');

    $api->sendMessage(
        $testChatId,
        "üìù <b>–£–†–û–í–ï–ù–¨ 4: –î–ò–ê–õ–û–ì–û–í–´–ï –°–¶–ï–ù–ê–†–ò–ò</b>\n\n" .
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –ø–∞–º—è—Ç—å—é –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º.\n\n" .
        "–Ø –∑–∞–¥–∞–º –≤–∞–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –∑–∞–ø–æ–º–Ω—é –æ—Ç–≤–µ—Ç—ã.\n\n" .
        "–í–æ–ø—Ä–æ—Å 1: –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?",
        ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
    );

    $logger->info('–ù–∞—á–∞—Ç –¥–∏–∞–ª–æ–≥–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π...');
    
    $dialogData = [];
    $currentStep = 'awaiting_name';
    $dialogTimeout = time() + 45; // 45 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≤–µ—Å—å –¥–∏–∞–ª–æ–≥
    
    while ($currentStep !== 'completed' && time() < $dialogTimeout) {
        $updates = $pollingHandler->pollOnce();
        
        foreach ($updates as $update) {
            if ($update->message && $update->message->text) {
                $userId = $update->message->from->id;
                $chatId = $update->message->chat->id;
                $text = $update->message->text;
                
                switch ($currentStep) {
                    case 'awaiting_name':
                        $dialogData['name'] = $text;
                        $conversationManager->startConversation($chatId, $userId, 'awaiting_age', $dialogData);
                        
                        $api->sendMessage(
                            $chatId,
                            "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, $text! üëã\n\n" .
                            "–í–æ–ø—Ä–æ—Å 2: –°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?",
                            ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                        );
                        
                        $currentStep = 'awaiting_age';
                        $logger->info("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏–º—è: $text");
                        break;
                        
                    case 'awaiting_age':
                        $dialogData['age'] = $text;
                        $conversationManager->updateConversation($chatId, $userId, 'awaiting_city', $dialogData);
                        
                        $api->sendMessage(
                            $chatId,
                            "–û—Ç–ª–∏—á–Ω–æ! üëç\n\n" .
                            "–í–æ–ø—Ä–æ—Å 3: –ò–∑ –∫–∞–∫–æ–≥–æ –≤—ã –≥–æ—Ä–æ–¥–∞?",
                            ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                        );
                        
                        $currentStep = 'awaiting_city';
                        $logger->info("–°–æ—Ö—Ä–∞–Ω–µ–Ω –≤–æ–∑—Ä–∞—Å—Ç: $text");
                        break;
                        
                    case 'awaiting_city':
                        $dialogData['city'] = $text;
                        $conversationManager->updateConversation($chatId, $userId, 'completed', $dialogData);
                        
                        $api->sendMessage(
                            $chatId,
                            "‚úÖ <b>–£—Ä–æ–≤–µ–Ω—å 4 –ø—Ä–æ–π–¥–µ–Ω!</b>\n\n" .
                            "üìù <b>–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:</b>\n" .
                            "üë§ –ò–º—è: {$dialogData['name']}\n" .
                            "üéÇ –í–æ–∑—Ä–∞—Å—Ç: {$dialogData['age']}\n" .
                            "üèô –ì–æ—Ä–æ–¥: {$dialogData['city']}\n\n" .
                            "üíæ –î–∏–∞–ª–æ–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –ø–∞–º—è—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!",
                            ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                        );
                        
                        $conversationManager->endConversation($chatId, $userId);
                        $currentStep = 'completed';
                        $logger->info('‚úì –£—Ä–æ–≤–µ–Ω—å 4 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
                        break;
                }
                
                break;
            }
        }
        
        if ($currentStep !== 'completed') {
            sleep(1);
        }
    }

    if ($currentStep !== 'completed') {
        $api->sendMessage(
            $testChatId,
            "‚è± –¢–∞–π–º–∞—É—Ç –¥–∏–∞–ª–æ–≥–∞. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–≤–Ω—é...",
            ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
        );
        $logger->warning('–¢–∞–π–º–∞—É—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ 4');
    }

    sleep(2);

    // ========================================
    // –£–†–û–í–ï–ù–¨ 5: –°–õ–û–ñ–ù–´–ï –°–¶–ï–ù–ê–†–ò–ò
    // ========================================
    $logger->info('========================================');
    $logger->info('–£–†–û–í–ï–ù–¨ 5: –°–õ–û–ñ–ù–´–ï –°–¶–ï–ù–ê–†–ò–ò –° –û–ë–†–ê–ë–û–¢–ö–û–ô –û–®–ò–ë–û–ö');
    $logger->info('========================================');

    $api->sendMessage(
        $testChatId,
        "üìù <b>–£–†–û–í–ï–ù–¨ 5: –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö</b>\n\n" .
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n" .
        "–¢–µ—Å—Ç 5.1: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—É—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è\n" .
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /empty",
        ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
    );

    $level5Completed = false;
    $level5Timeout = time() + 15;
    
    while (!$level5Completed && time() < $level5Timeout) {
        $updates = $pollingHandler->pollOnce();
        
        foreach ($updates as $update) {
            if ($update->message && $update->message->text === '/empty') {
                $chatId = $update->message->chat->id;
                
                try {
                    // –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—É—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –æ—à–∏–±–∫—É)
                    $api->sendMessage($chatId, '');
                    $logger->warning('–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ)');
                    
                    $api->sendMessage(
                        $chatId,
                        "‚ö†Ô∏è –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ)",
                        ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                    );
                } catch (\Exception $e) {
                    $logger->info('–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ: ' . $e->getMessage());
                    
                    $api->sendMessage(
                        $chatId,
                        "‚úÖ <b>–£—Ä–æ–≤–µ–Ω—å 5 –ø—Ä–æ–π–¥–µ–Ω!</b>\n\n" .
                        "–í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.\n" .
                        "–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ.\n\n" .
                        "–û—à–∏–±–∫–∞: <code>" . htmlspecialchars($e->getMessage()) . "</code>\n\n" .
                        "üõ°Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!",
                        ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                    );
                }
                
                $level5Completed = true;
                $logger->info('‚úì –£—Ä–æ–≤–µ–Ω—å 5 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
                break;
            }
        }
        
        if (!$level5Completed) {
            sleep(1);
        }
    }

    if (!$level5Completed) {
        $api->sendMessage(
            $testChatId,
            "‚úÖ <b>–£—Ä–æ–≤–µ–Ω—å 5 –ø—Ä–æ–π–¥–µ–Ω (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)!</b>\n\n" .
            "–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ.",
            ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
        );
        $logger->info('‚úì –£—Ä–æ–≤–µ–Ω—å 5 –∑–∞–≤–µ—Ä—à–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
    }

    sleep(2);

    // ========================================
    // –£–†–û–í–ï–ù–¨ 6: –ö–û–ú–ü–õ–ï–ö–°–ù–´–ï –°–¶–ï–ù–ê–†–ò–ò
    // ========================================
    $logger->info('========================================');
    $logger->info('–£–†–û–í–ï–ù–¨ 6: –ö–û–ú–ü–õ–ï–ö–°–ù–´–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–´–ï –°–¶–ï–ù–ê–†–ò–ò');
    $logger->info('========================================');

    $api->sendMessage(
        $testChatId,
        "üìù <b>–£–†–û–í–ï–ù–¨ 6: –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –°–¶–ï–ù–ê–†–ò–ô</b>\n\n" .
        "–ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–∫–∞–∑–∞ —Ç–æ–≤–∞—Ä–∞.\n\n" .
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        TelegramAPI::PARSE_MODE_HTML,
        replyMarkup: InlineKeyboardBuilder::make()
            ->addCallbackButton('üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', 'cat_electronics')
            ->addCallbackButton('üëï –û–¥–µ–∂–¥–∞', 'cat_clothes')
            ->row()
            ->addCallbackButton('üìö –ö–Ω–∏–≥–∏', 'cat_books')
            ->build()
    );

    $orderData = [];
    $orderStep = 'awaiting_category';
    $orderTimeout = time() + 45;
    
    while ($orderStep !== 'completed' && time() < $orderTimeout) {
        $updates = $pollingHandler->pollOnce();
        
        foreach ($updates as $update) {
            if ($update->callbackQuery) {
                $callbackData = $update->callbackQuery->data;
                $chatId = $update->callbackQuery->message->chat->id;
                $messageId = $update->callbackQuery->message->messageId;
                $userId = $update->callbackQuery->from->id;
                
                $api->answerCallbackQuery($update->callbackQuery->id, '–û–±—Ä–∞–±–æ—Ç–∫–∞...');
                
                if ($orderStep === 'awaiting_category' && strpos($callbackData, 'cat_') === 0) {
                    $category = str_replace('cat_', '', $callbackData);
                    $orderData['category'] = $category;
                    
                    $conversationManager->startConversation($chatId, $userId, 'awaiting_quantity', $orderData);
                    
                    $api->editMessageText(
                        $chatId,
                        $messageId,
                        "–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: " . match($category) {
                            'electronics' => 'üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
                            'clothes' => 'üëï –û–¥–µ–∂–¥–∞',
                            'books' => 'üìö –ö–Ω–∏–≥–∏',
                            default => $category
                        } . "\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:",
                        TelegramAPI::PARSE_MODE_HTML,
                        replyMarkup: InlineKeyboardBuilder::make()
                            ->addCallbackButton('1Ô∏è‚É£', 'qty_1')
                            ->addCallbackButton('2Ô∏è‚É£', 'qty_2')
                            ->addCallbackButton('3Ô∏è‚É£', 'qty_3')
                            ->build()
                    );
                    
                    $orderStep = 'awaiting_quantity';
                    $logger->info("–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: $category");
                }
                elseif ($orderStep === 'awaiting_quantity' && strpos($callbackData, 'qty_') === 0) {
                    $quantity = str_replace('qty_', '', $callbackData);
                    $orderData['quantity'] = $quantity;
                    
                    $conversationManager->updateConversation($chatId, $userId, 'awaiting_confirm', $orderData);
                    
                    $categoryName = match($orderData['category']) {
                        'electronics' => 'üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
                        'clothes' => 'üëï –û–¥–µ–∂–¥–∞',
                        'books' => 'üìö –ö–Ω–∏–≥–∏',
                        default => $orderData['category']
                    };
                    
                    $api->editMessageText(
                        $chatId,
                        $messageId,
                        "üì¶ <b>–í–∞—à –∑–∞–∫–∞–∑:</b>\n\n" .
                        "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: $categoryName\n" .
                        "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {$quantity}\n\n" .
                        "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–∫–∞–∑:",
                        TelegramAPI::PARSE_MODE_HTML,
                        replyMarkup: InlineKeyboardBuilder::make()
                            ->addCallbackButton('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'confirm_yes')
                            ->addCallbackButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'confirm_no')
                            ->build()
                    );
                    
                    $orderStep = 'awaiting_confirm';
                    $logger->info("–í—ã–±—Ä–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: $quantity");
                }
                elseif ($orderStep === 'awaiting_confirm' && $callbackData === 'confirm_yes') {
                    $orderData['confirmed'] = true;
                    $conversationManager->updateConversation($chatId, $userId, 'completed', $orderData);
                    
                    $categoryName = match($orderData['category']) {
                        'electronics' => 'üì± –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
                        'clothes' => 'üëï –û–¥–µ–∂–¥–∞',
                        'books' => 'üìö –ö–Ω–∏–≥–∏',
                        default => $orderData['category']
                    };
                    
                    $api->editMessageText(
                        $chatId,
                        $messageId,
                        "‚úÖ <b>–£–†–û–í–ï–ù–¨ 6 –ü–†–û–ô–î–ï–ù!</b>\n\n" .
                        "üéâ <b>–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!</b>\n\n" .
                        "üì¶ –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:\n" .
                        "‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: $categoryName\n" .
                        "‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {$orderData['quantity']}\n" .
                        "‚Ä¢ –°—Ç–∞—Ç—É—Å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω ‚úì\n\n" .
                        "üíæ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î\n" .
                        "üîÑ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!",
                        ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                    );
                    
                    $conversationManager->endConversation($chatId, $userId);
                    $orderStep = 'completed';
                    $logger->info('‚úì –£—Ä–æ–≤–µ–Ω—å 6 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
                }
                elseif ($orderStep === 'awaiting_confirm' && $callbackData === 'confirm_no') {
                    $api->editMessageText(
                        $chatId,
                        $messageId,
                        "‚ùå –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω",
                        ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
                    );
                    
                    $conversationManager->endConversation($chatId, $userId);
                    $orderStep = 'cancelled';
                    $logger->info('–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
                }
                
                break;
            }
        }
        
        if ($orderStep !== 'completed' && $orderStep !== 'cancelled') {
            sleep(1);
        }
    }

    sleep(2);

    // ========================================
    // –ó–ê–í–ï–†–®–ï–ù–ò–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
    // ========================================
    $logger->info('========================================');
    $logger->info('–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');
    $logger->info('========================================');

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    $stats = $conversationManager->getStatistics();
    $logger->info('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤:', $stats);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    $api->sendMessage(
        $testChatId,
        "üéâ <b>–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!</b>\n\n" .
        "‚úÖ –í—Å–µ —É—Ä–æ–≤–Ω–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ:\n" .
        "‚Ä¢ –£—Ä–æ–≤–µ–Ω—å 1: –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è ‚úì\n" .
        "‚Ä¢ –£—Ä–æ–≤–µ–Ω—å 2: –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã ‚úì\n" .
        "‚Ä¢ –£—Ä–æ–≤–µ–Ω—å 3: –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ‚úì\n" .
        "‚Ä¢ –£—Ä–æ–≤–µ–Ω—å 4: –î–∏–∞–ª–æ–≥–∏ —Å –ø–∞–º—è—Ç—å—é ‚úì\n" .
        "‚Ä¢ –£—Ä–æ–≤–µ–Ω—å 5: –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ‚úì\n" .
        "‚Ä¢ –£—Ä–æ–≤–µ–Ω—å 6: –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ ‚úì\n\n" .
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n" .
        "‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤: {$stats['total']}\n" .
        "‚Ä¢ MySQL: –†–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n" .
        "‚Ä¢ Polling: –°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n\n" .
        "üìÅ –î–∞–º–ø—ã –ë–î —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ /mysql/\n\n" .
        "üöÄ –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!",
        ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
    );

    // –°–æ–∑–¥–∞–µ–º –¥–∞–º–ø—ã —Ç–∞–±–ª–∏—Ü
    $logger->info('–°–æ–∑–¥–∞–Ω–∏–µ –¥–∞–º–ø–æ–≤ —Ç–∞–±–ª–∏—Ü MySQL...');
    
    $tables = ['telegram_bot_users', 'telegram_bot_conversations'];
    
    foreach ($tables as $table) {
        $dumpFile = __DIR__ . "/mysql/{$table}.sql";
        
        exec("sudo mysqldump -u root test_telegram_bot $table > $dumpFile 2>&1", $output, $returnCode);
        
        if ($returnCode === 0 && file_exists($dumpFile)) {
            $logger->info("‚úì –î–∞–º–ø —Ç–∞–±–ª–∏—Ü—ã $table —Å–æ–∑–¥–∞–Ω: $dumpFile");
        } else {
            $logger->error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–º–ø–∞ $table", ['output' => $output]);
        }
    }

    // –ü–æ–ª–Ω—ã–π –¥–∞–º–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    $fullDumpFile = __DIR__ . "/mysql/full_database_dump.sql";
    exec("sudo mysqldump -u root test_telegram_bot > $fullDumpFile 2>&1", $output, $returnCode);
    
    if ($returnCode === 0 && file_exists($fullDumpFile)) {
        $logger->info("‚úì –ü–æ–ª–Ω—ã–π –¥–∞–º–ø –ë–î —Å–æ–∑–¥–∞–Ω: $fullDumpFile");
    }

    $logger->info('========================================');
    $logger->info('–í–°–ï –û–ü–ï–†–ê–¶–ò–ò –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û');
    $logger->info('========================================');

} catch (\Exception $e) {
    $logger->error('–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê', [
        'message' => $e->getMessage(),
        'file' => $e->getFile(),
        'line' => $e->getLine(),
        'trace' => $e->getTraceAsString(),
    ]);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    if ($api !== null) {
        try {
            $api->sendMessage(
                $testChatId,
                "‚ùå <b>–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø</b>\n\n" .
                "–û—à–∏–±–∫–∞: <code>" . htmlspecialchars($e->getMessage()) . "</code>\n\n" .
                "–§–∞–π–ª: {$e->getFile()}:{$e->getLine()}\n\n" .
                "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.",
                ["parse_mode" => TelegramAPI::PARSE_MODE_HTML]
            );
        } catch (\Exception $notifyError) {
            $logger->error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ', [
                'error' => $notifyError->getMessage(),
            ]);
        }
    }

    exit(1);
}

$logger->info('–°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
