<?php

/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è Telegram –±–æ—Ç–∞
 * 
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç:
 * - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é AccessControl
 * - –ü—Ä–æ–≤–µ—Ä–∫—É –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–∞–º
 * - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ AccessControlMiddleware
 * - –û–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø—Ä–∞–≤
 */

declare(strict_types=1);

require_once __DIR__ . '/../autoload.php';

use App\Component\Http;
use App\Component\Logger;
use App\Component\TelegramBot\Core\TelegramAPI;
use App\Component\TelegramBot\Core\WebhookHandler;
use App\Component\TelegramBot\Core\AccessControl;
use App\Component\TelegramBot\Core\AccessControlMiddleware;
use App\Component\TelegramBot\Handlers\TextHandler;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
$logger = new Logger(['directory' => __DIR__ . '/../logs']);
$http = new Http(['timeout' => 30], $logger);

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
$telegramConfig = json_decode(file_get_contents(__DIR__ . '/../config/telegram.json'), true);
$api = new TelegramAPI($telegramConfig['token'], $http, $logger);

// === 1. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ö–û–ù–¢–†–û–õ–Ø –î–û–°–¢–£–ü–ê ===

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞
$accessControl = new AccessControl(
    __DIR__ . '/../config/telegram_bot_access_control.json',
    $logger
);

// –°–æ–∑–¥–∞–Ω–∏–µ middleware
$accessMiddleware = new AccessControlMiddleware($accessControl, $api, $logger);

echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞: " . ($accessControl->isEnabled() ? "–í–ö–õ–Æ–ß–ï–ù" : "–í–´–ö–õ–Æ–ß–ï–ù") . "\n";

// === 2. –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ê –í–†–£–ß–ù–£–Æ ===

// –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$userId = 366442475; // Admin
$command = '/adduser';

if ($accessControl->checkAccess($userId, $command)) {
    echo "‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {$userId} –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–µ {$command}\n";
} else {
    echo "‚úó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {$userId} –ù–ï –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–µ {$command}\n";
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$role = $accessControl->getUserRole($userId);
echo "–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {$userId}: {$role}\n";

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
$allowedCommands = $accessControl->getAllowedCommands($userId);
echo "–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: " . implode(', ', $allowedCommands) . "\n\n";

// === 3. –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –° WEBHOOK HANDLER ===

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ webhook
$webhookHandler = new WebhookHandler($logger);

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ webhook –∑–∞–ø—Ä–æ—Å
if (!WebhookHandler::isValidWebhookRequest()) {
    echo "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω —á–µ—Ä–µ–∑ webhook –æ—Ç Telegram\n";
    exit;
}

$update = $webhookHandler->getUpdate(false);
$textHandler = new TextHandler($api, $logger);

// === 4. –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î–´ /START ===

$textHandler->handleCommand($update, 'start', function ($message) use ($api, $accessMiddleware) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ middleware
    if (!$accessMiddleware->checkAndNotify($message, '/start')) {
        return; // Middleware —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ
    }
    
    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    $api->sendMessage(
        $message->chat->id,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω."
    );
});

// === 5. –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î–´ /USERINFO (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤) ===

$textHandler->handleCommand($update, 'userinfo', function ($message) use ($api, $accessControl, $accessMiddleware) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
    if (!$accessMiddleware->checkAndNotify($message, '/userinfo')) {
        return;
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    $userId = $message->from->id;
    $userInfo = $accessControl->getUserInfo($userId);
    $role = $accessControl->getUserRole($userId);
    $commands = $accessControl->getAllowedCommands($userId);
    
    $response = "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n\n";
    $response .= "ID: {$userId}\n";
    $response .= "–†–æ–ª—å: {$role}\n";
    
    if ($userInfo) {
        $response .= "–ò–º—è: {$userInfo['first_name']} {$userInfo['last_name']}\n";
        if (!empty($userInfo['email'])) {
            $response .= "Email: {$userInfo['email']}\n";
        }
    }
    
    $response .= "\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" . implode(', ', $commands);
    
    $api->sendMessage($message->chat->id, $response);
});

// === 6. –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ú–ê–ù–î–´ /ADDUSER (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤) ===

$textHandler->handleCommand($update, 'adduser', function ($message) use ($api, $accessMiddleware) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
    if (!$accessMiddleware->checkAndNotify($message, '/adduser')) {
        return;
    }
    
    // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
    $api->sendMessage(
        $message->chat->id,
        "üîß –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º."
    );
});

// === 7. –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –û–ë–ï–†–ù–£–¢–û–ì–û CALLBACK ===

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –æ–±–µ—Ä–Ω—É—Ç—å callback —á–µ—Ä–µ–∑ middleware
$wrappedCallback = $accessMiddleware->wrapCommandHandler(
    '/stat',
    function ($message) use ($api) {
        $api->sendMessage(
            $message->chat->id,
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:\n\n–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞..."
        );
    }
);

$textHandler->handleCommand($update, 'stat', $wrappedCallback);

// === 8. –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===

$textHandler->handleCommand($update, 'mystatus', function ($message) use ($api, $accessControl) {
    $userId = $message->from->id;
    
    $isRegistered = $accessControl->isUserRegistered($userId);
    $role = $accessControl->getUserRole($userId);
    
    $response = "üë§ –í–∞—à —Å—Ç–∞—Ç—É—Å:\n\n";
    $response .= $isRegistered ? "‚úì –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ\n" : "‚úó –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã\n";
    $response .= "–†–æ–ª—å: {$role}\n";
    
    $api->sendMessage($message->chat->id, $response);
});

// === 9. –°–ü–ò–°–û–ö –í–°–ï–• –†–û–õ–ï–ô (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤) ===

$textHandler->handleCommand($update, 'roles', function ($message) use ($api, $accessControl, $accessMiddleware) {
    if (!$accessMiddleware->checkAndNotify($message, '/roles')) {
        return;
    }
    
    $roles = $accessControl->getAllRoles();
    $response = "üìã –°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ:\n\n";
    
    foreach ($roles as $roleName) {
        $roleInfo = $accessControl->getRoleInfo($roleName);
        $commandsCount = count($roleInfo['commands'] ?? []);
        $response .= "‚Ä¢ {$roleName} ({$commandsCount} –∫–æ–º–∞–Ω–¥)\n";
    }
    
    $api->sendMessage($message->chat->id, $response);
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ Telegram
$webhookHandler->sendResponse();

echo "\n=== –ü—Ä–∏–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω ===\n";
echo "–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞:\n";
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ config/telegram_bot_access_control.json\n";
echo "2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 'enabled': true\n";
echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ config/telegram_bot_users.json\n";
echo "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–æ–ª–∏ –≤ config/telegram_bot_roles.json\n";
